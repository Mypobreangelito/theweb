---
const {
  images = [],
  interval = 4000,
  autoplay = false,
  pauseOnHover = false,
  showDots = true,
  showArrows = true,
} = Astro.props;
---

<div
  class="relative w-full max-w-3xl mx-auto"
  data-slideshow
  data-images={JSON.stringify(images)}
  data-interval={interval}
  data-autoplay={autoplay ? "1" : "0"}
  data-pause={pauseOnHover ? "1" : "0"}
>
  <!-- Imagen -->
  <img data-slide class="w-full h-auto rounded-lg object-cover" alt="" />

  <!-- Caption -->
  <div
    data-caption
    class="absolute bottom-0 left-0 right-0 bg-black/50 text-white p-2 text-sm hidden"
  ></div>

  <!-- Flechas -->
  {showArrows && (
    <>
      <button
        data-prev
        class="absolute top-1/2 left-2 -translate-y-1/2 bg-black/40 text-white px-2 py-1 rounded"
        aria-label="Anterior"
      >
        ‹
      </button>
      <button
        data-next
        class="absolute top-1/2 right-2 -translate-y-1/2 bg-black/40 text-white px-2 py-1 rounded"
        aria-label="Siguiente"
      >
        ›
      </button>
    </>
  )}

  <!-- Dots -->
  {showDots && (
    <div data-dots class="absolute bottom-2 left-1/2 -translate-x-1/2 flex gap-2">
      {images.map((_, idx) => (
        <button
          data-dot={idx}
          class="w-2 h-2 rounded-full opacity-50 bg-white"
          aria-label={`Ir a la imagen ${idx + 1}`}
        />
      ))}
    </div>
  )}
</div>

<script is:inline>
  (() => {
    document.querySelectorAll('[data-slideshow]').forEach((root) => {
      const imgs = JSON.parse(root.dataset.images || '[]');
      if (!imgs.length) return;

      const imgEl = root.querySelector('[data-slide]');
      const capEl = root.querySelector('[data-caption]');
      const dots = Array.from(root.querySelectorAll('[data-dot]'));
      const nextBtn = root.querySelector('[data-next]');
      const prevBtn = root.querySelector('[data-prev]');

      const interval = Number(root.dataset.interval || 4000);
      const autoplay = root.dataset.autoplay === '1';
      const pauseOnHover = root.dataset.pause === '1';

      let i = 0, t = null;

      function render() {
        const it = imgs[i];
        imgEl.src = it.src;
        imgEl.alt = it.alt || '';
        if (capEl) {
          const has = !!it.caption;
          capEl.textContent = it.caption || '';
          capEl.classList.toggle('hidden', !has);
        }
        dots.forEach((d, k) => {
          d.classList.toggle('opacity-100', k === i);
          d.classList.toggle('opacity-50', k !== i);
        });
      }

      function next() { i = (i + 1) % imgs.length; render(); }
      function prev() { i = (i - 1 + imgs.length) % imgs.length; render(); }

      nextBtn && nextBtn.addEventListener('click', next);
      prevBtn && prevBtn.addEventListener('click', prev);
      dots.forEach((d, k) => d.addEventListener('click', () => { i = k; render(); }));

      function start() { if (!t && autoplay) t = setInterval(next, interval); }
      function stop() { if (t) { clearInterval(t); t = null; } }

      if (pauseOnHover) {
        root.addEventListener('mouseenter', stop);
        root.addEventListener('mouseleave', start);
      }

      render();
      start();
    });
  })();
</script>